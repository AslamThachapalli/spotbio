// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  links Link[]
  socials Social[]
  profile Profile?
  username String @unique
  email String @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id String @id @default(uuid())
  userId String @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  name String
  bio String
  avatar String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Link {
  id String @id @default(uuid())
  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  title String
  link String
  position Int
  hidden Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Social {
  id String @id @default(uuid())
  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  platformId String
  platform SocialPlatform @relation(fields: [platformId], references: [id])
  position Int
  link String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SocialPlatform {
  id String @id @default(uuid())
  type PlatformType @unique
  socials Social[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum PlatformType {
  LINKEDIN
  INSTAGRAM
  GITHUB
  X
  YOUTUBE
  TIKTOK
  WEBSITE
  EMAIL
  FACEBOOK
}